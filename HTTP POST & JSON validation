// bagian ini menjelaskan bagaimana ketika sebuah title pada post tidak boleh kosong,
// ketika di run maka bagian title error, dan ketika diisi maka akan berjalan dengan baik
// melakukan validasi untuk menghindari hal hal yang tidak diinginkan pada sebuah data 
// yang akan di post


package main

import (
	"fmt"
	"net/http"

	"github.com/gin-gonic/gin"
)

func main() {
	// Membuat router default dengan Gin
	router := gin.Default()

	router.GET("/", rootHandler)

	router.GET("/hello", helloHandler)

	router.GET("/books/:id/:title", booksHandler)

	router.GET("/query", queryHandler)

	router.POST("/books", postBooksHandler)

	router.Run(":8088")
}

func rootHandler(c *gin.Context) {
	c.JSON(http.StatusOK, gin.H{
		"name": "Magdalena Tambunan",
		"bio":  "mahasiswi del",
	})
}

func helloHandler(c *gin.Context) {
	c.JSON(http.StatusOK, gin.H{
		"title": "Magdalena Tambunan",
		"bio":   "mahasiswi del",
	})
}

func booksHandler(c *gin.Context) {
	id := c.Param("id")                                    // Mengambil parameter URL "id"
	title := c.Param("title")                              // Mengambil parameter URL "title"
	c.JSON(http.StatusOK, gin.H{"id": id, "title": title}) // Mengembalikan JSON dengan id dan title
}

func queryHandler(c *gin.Context) {
	title := c.Query("title")
	price := c.Query("price")                                    // Mengambil parameter query "title"
	c.JSON(http.StatusOK, gin.H{"title": title, "price": price}) // Mengembalikan JSON dengan title
}

type BookInput struct {
	Title string `json:"title" binding:"required"`
//title ini required yaitu dibutuhkan, ketika pada postman title kosong
//dan di run maka hasilnya tidak jalan dan terkena validasi dan server juga akan mati
	Price int    `json:"price" binding:"required,number"`
}

func postBooksHandler(c *gin.Context) {
	// data yang dimasukkan oleh user
	// menerima data title dan price
	var bookInput BookInput

	err := c.ShouldBindJSON(&bookInput) // Menggunakan pointer
	if err != nil {
		c.JSON(http.StatusBadRequest, err)
		fmt.Println(err)
		return
	}
	c.JSON(http.StatusOK, gin.H{ // Menggunakan http.StatusOK
		"title": bookInput.Title,
		"price": bookInput.Price,
	})
}
